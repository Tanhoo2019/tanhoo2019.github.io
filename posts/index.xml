<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tyler&#39;s Blog</title>
    <link>https://tanhoo2019.github.io/posts/</link>
    <description>Recent content in Posts on Tyler&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 10 Feb 2020 23:36:06 +0800</lastBuildDate>
    
	<atom:link href="https://tanhoo2019.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ssr搭建教程</title>
      <link>https://tanhoo2019.github.io/2020/02/ssr%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 10 Feb 2020 23:36:06 +0800</pubDate>
      
      <guid>https://tanhoo2019.github.io/2020/02/ssr%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</guid>
      <description>随着服务器的入门门槛越来越低，使用自己的服务器搭建一个梯子或者放一些自己的网站（博客）也越来越简单。下面主要总结一下使用服务器搭建梯子的方法。
购买服务器 现在服务器的价格越来越便宜了，像百度智能云/阿里云/腾讯云/华为云等都推出了自己的学生优惠计划：启航校园计划/云翼计划/云+校园/云创校园计划，每月只需 ¥9-¥10 就可以使用一台低配的服务器，用来放一些 web 服务是十分划算的。
但是这些厂商的学生机都是放在国内的服务器，均不能搭梯子（那你说个**……），还是可以用来放网站和学习服务器的嘛^_^。
国内厂商也推出了放在国外的服务器，但价格都相对较贵。所以可以到一些国外的服务器提供商购买，如 DigitalOcean，Vultr 或 Bandwagonhost。
DigitalOcean 如果你是学生，这里强势推荐一下 DigitalOcean，你可以在 GitHub 教育认证链接认证为学生用户，就可以直接得到 DO 的 $50 优惠券代码，如果按照 DO 的最低配置 VPS 算，够使用 10 个月了。
而且，使用这个推荐注册链接你还可以得到额外的 100 刀优惠（有效期两个月）。
注册时唯一麻烦的地方是需要绑定 PayPal 账户并支付 5 刀验证支付能力，当然这 5 刀也会进入 DO 的账户。 简单测试之后发现 DO 的 SFO2 的服务器延迟是最低的，你也可以根据自己的常用网络环境进行测试：测试地址。
SSR部署 如果你是 macOS/Linux，则可以直接通过 ssh 命令来连接服务器；如果是Windows，则需要通过 XShell/FinalShell等软件来连接。 登录服务器后，使用 ToyoDAdoubi 大神写的一件部署脚本直接部署，以 CentOS 系统为例，命令如下：
1 2 3 4  yum -y install wget wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh chmod +x ssr.</description>
    </item>
    
    <item>
      <title>数据结构之排序算法</title>
      <link>https://tanhoo2019.github.io/2020/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Mon, 10 Feb 2020 16:45:04 +0800</pubDate>
      
      <guid>https://tanhoo2019.github.io/2020/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description> 选择排序 原理 选择数组中最大值，并将最后一位替换成最大值，然后缩小选择范围，重复而为之，最后得到顺序。
过程 假设有以下数组：
1  int a[] = {2,43,45,66,4,21,67,88,24,35,21};   Step1
先定义一个max函数，求数组中的最大值。
max = 88;
把最后一位21替换成88。
Step2
范围缩小一位，求数组中的最大值。
max = 67;
把倒数第二位35替换成67。
Step3
重复上述过程
c语言代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #include &amp;lt;stdio.h&amp;gt;// 排序算法- 选择排序 int max(int a[], int len) { int maxid = 0; for ( int i=1; i&amp;lt;len; i++ ) { if ( a[i] &amp;gt; a[maxid] ) { maxid = i; } } return maxid; } int main() { int a[] = {2,43,45,66,4,21,67,88,24,35,21}; int len = sizeof(a)/sizeof(a[0]); for ( int i = len-1; i&amp;gt;0; i-- ) { int maxid = max(a, i+1); // swap a[maxid], a[len-1]  int t = a[maxid]; a[maxid] = a[i]; a[i] = t; } for ( int i=0; i&amp;lt;len; i++ ) { printf(&amp;#34;%d &amp;#34;, a[i]); } printf(&amp;#34;\n&amp;#34;); return 0; }  </description>
    </item>
    
    <item>
      <title>数据结构之二分搜索</title>
      <link>https://tanhoo2019.github.io/2020/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Mon, 10 Feb 2020 14:53:12 +0800</pubDate>
      
      <guid>https://tanhoo2019.github.io/2020/02/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2/</guid>
      <description>二分搜索的优点  效率高， 搜索次数为log2N，随着数组增大，搜索次数的增速缓慢。
 如何理解二分搜索 二分搜索是建立在有序数组条件下的。假设一组顺序数组:
1  a[] = {2,4,7,11,13,16,21,24,27,32,36,40,46};   下面我们用二分搜索来查找36的索引值。
1 2  0 1 2 3 4 5 6 7 8 9 10 11 12 2 4 7 11 13 16 21 24 27 32 36 40 46   Step1:
left = 0, right = 12;
mid = (left + right) / 2, 所以此时mid = 6;
我们要查找的数是36，设k = 36;
因为 a[mid] = 21, 所以 k &amp;gt; a[mid]。</description>
    </item>
    
    <item>
      <title>如何更新blog</title>
      <link>https://tanhoo2019.github.io/2020/01/how_to_use/</link>
      <pubDate>Wed, 15 Jan 2020 16:26:40 +0800</pubDate>
      
      <guid>https://tanhoo2019.github.io/2020/01/how_to_use/</guid>
      <description> 新建博文 hugo new posts/newblog.md
打开新建的newblog.md，编辑blog内容
检查内容 cd 到blog根目录，然后输入以下命令：
hugo server -D
更新public静态页面 先cd到blog根目录，然后输入以下命令：
hugo -D
推送更新内容 cd到public目录下，然后输入以下命令：
1 2 3  git add -A git commit -m &amp;#34;我的第二次提交&amp;#34; git push -u origin master  </description>
    </item>
    
    <item>
      <title>Blog2</title>
      <link>https://tanhoo2019.github.io/2019/12/blog2/</link>
      <pubDate>Fri, 06 Dec 2019 16:02:05 +1100</pubDate>
      
      <guid>https://tanhoo2019.github.io/2019/12/blog2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://tanhoo2019.github.io/2019/12/blog/</link>
      <pubDate>Fri, 06 Dec 2019 00:03:30 +1100</pubDate>
      
      <guid>https://tanhoo2019.github.io/2019/12/blog/</guid>
      <description> My first blog This is my test blog 1  print(&amp;#34;Hello world!&amp;#34;)  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://tanhoo2019.github.io/1/01/typora-markdown-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tanhoo2019.github.io/1/01/typora-markdown-%E8%AF%AD%E6%B3%95/</guid>
      <description>一级标题 二级标题 三级标题 四级标题 这是下划线
这是删除线
字体加粗
字体倾斜
 早餐 午餐 晚餐  面包 米饭    这是引用
 这是我的博客</description>
    </item>
    
  </channel>
</rss>